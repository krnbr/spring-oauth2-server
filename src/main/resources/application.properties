server.port=64200
server.forward-headers-strategy=framework

spring.security.oauth2.authorizationserver.client.localhost.registration.client-id=localhost
spring.security.oauth2.authorizationserver.client.localhost.registration.client-name=localhost
spring.security.oauth2.authorizationserver.client.localhost.registration.client-secret={noop}localhost
spring.security.oauth2.authorizationserver.client.localhost.registration.authorization-grant-types=client_credentials
spring.security.oauth2.authorizationserver.client.localhost.registration.client-authentication-methods=client_secret_post,client_secret_basic

# opaque token, if not provided then JWT.
spring.security.oauth2.authorizationserver.client.localhost.token.access-token-format=reference
spring.security.oauth2.authorizationserver.client.localhost.token.access-token-time-to-live=240s


spring.security.oauth2.authorizationserver.client.second.registration.client-id=second
spring.security.oauth2.authorizationserver.client.second.registration.client-name=second
spring.security.oauth2.authorizationserver.client.second.registration.client-secret={noop}second
spring.security.oauth2.authorizationserver.client.second.registration.authorization-grant-types=client_credentials
spring.security.oauth2.authorizationserver.client.second.registration.client-authentication-methods=client_secret_post,client_secret_basic

# opaque token, if not provided then JWT.
spring.security.oauth2.authorizationserver.client.second.token.access-token-format=reference
spring.security.oauth2.authorizationserver.client.second.token.access-token-time-to-live=3600s